// Code generated by sqlc. DO NOT EDIT.
// source: articles.sql

package db

import (
	"context"
	"database/sql"
)

const createArticle = `-- name: CreateArticle :one
INSERT INTO articles (
	src_id
  	, title
  	, content
) VALUES (
  	$1, $2, $3
)
RETURNING id, src_id, title, content, created_at
`

type CreateArticleParams struct {
	SrcID   string         `json:"src_id"`
	Title   sql.NullString `json:"title"`
	Content sql.NullString `json:"content"`
}

func (q *Queries) CreateArticle(ctx context.Context, arg CreateArticleParams) (Article, error) {
	row := q.queryRow(ctx, q.createArticleStmt, createArticle, arg.SrcID, arg.Title, arg.Content)
	var i Article
	err := row.Scan(
		&i.ID,
		&i.SrcID,
		&i.Title,
		&i.Content,
		&i.CreatedAt,
	)
	return i, err
}

const deleteArticle = `-- name: DeleteArticle :exec
DELETE FROM articles
WHERE id = $1
`

func (q *Queries) DeleteArticle(ctx context.Context, id int32) error {
	_, err := q.exec(ctx, q.deleteArticleStmt, deleteArticle, id)
	return err
}

const getArticle = `-- name: GetArticle :many
SELECT id, src_id, title, content, created_at
FROM articles 
WHERE id = $1
`

func (q *Queries) GetArticle(ctx context.Context, id int32) ([]Article, error) {
	rows, err := q.query(ctx, q.getArticleStmt, getArticle, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Article
	for rows.Next() {
		var i Article
		if err := rows.Scan(
			&i.ID,
			&i.SrcID,
			&i.Title,
			&i.Content,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const listArticles = `-- name: ListArticles :many
SELECT id, src_id, title, content, created_at 
FROM articles
`

func (q *Queries) ListArticles(ctx context.Context) ([]Article, error) {
	rows, err := q.query(ctx, q.listArticlesStmt, listArticles)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Article
	for rows.Next() {
		var i Article
		if err := rows.Scan(
			&i.ID,
			&i.SrcID,
			&i.Title,
			&i.Content,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
